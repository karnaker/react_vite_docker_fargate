# Logs and temporary files generated by node and various package managers. 
# Ignoring these keeps the repository clean of unnecessary files that can be generated from source.
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Dependency directories
# These folders contain the packages installed by package managers and do not need to be tracked by Git
# as they can be easily restored with `npm install`, `yarn install`, etc.
node_modules

# Build output directories
# These folders contain compiled or generated code and assets from the source. 
# They should not be tracked as their contents can be regenerated from the source.
dist
dist-ssr

# Local configuration files
# Files that may contain sensitive or personal information, or local settings not applicable to other developers.
*.local

# IDE and editor directories and files
# These files and folders are specific to individual development environments and can interfere
# with other developers' setups or contain user-specific paths and settings.
.vscode/*             # Ignore all files in .vscode directory
!.vscode/extensions.json # Except for extensions.json, which can recommend extensions for the project
.idea                # IntelliJ IDEA configuration directory
.DS_Store            # macOS folder attribute file
*.suo                # Visual Studio solution user options file
*.ntvs*              # Node.js Tools for Visual Studio
*.njsproj            # Visual Studio Node.js project file
*.sln                # Visual Studio solution file
*.sw?                # Vim swap files

# Environment variable configuration file
# This file is ignored to prevent accidentally committing sensitive information, such as API keys or passwords,
# that should remain confidential and only known to the local environment or securely shared.
env_vars.conf

# OpenTofu (or Terraform)
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc